// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: namenode.proto

package namenode

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PropuestaStatus int32

const (
	PropuestaStatus_Rechazado PropuestaStatus = 0
	PropuestaStatus_Aprobado  PropuestaStatus = 1
)

// Enum value maps for PropuestaStatus.
var (
	PropuestaStatus_name = map[int32]string{
		0: "Rechazado",
		1: "Aprobado",
	}
	PropuestaStatus_value = map[string]int32{
		"Rechazado": 0,
		"Aprobado":  1,
	}
)

func (x PropuestaStatus) Enum() *PropuestaStatus {
	p := new(PropuestaStatus)
	*p = x
	return p
}

func (x PropuestaStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PropuestaStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_namenode_proto_enumTypes[0].Descriptor()
}

func (PropuestaStatus) Type() protoreflect.EnumType {
	return &file_namenode_proto_enumTypes[0]
}

func (x PropuestaStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PropuestaStatus.Descriptor instead.
func (PropuestaStatus) EnumDescriptor() ([]byte, []int) {
	return file_namenode_proto_rawDescGZIP(), []int{0}
}

type Propuesta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datanode1      []int32         `protobuf:"varint,1,rep,packed,name=datanode1,proto3" json:"datanode1,omitempty"`
	Datanode2      []int32         `protobuf:"varint,2,rep,packed,name=datanode2,proto3" json:"datanode2,omitempty"`
	Datanode3      []int32         `protobuf:"varint,3,rep,packed,name=datanode3,proto3" json:"datanode3,omitempty"`
	CantidadPartes int32           `protobuf:"varint,4,opt,name=cantidadPartes,proto3" json:"cantidadPartes,omitempty"`
	Status         PropuestaStatus `protobuf:"varint,5,opt,name=status,proto3,enum=namenode.PropuestaStatus" json:"status,omitempty"`
	NombreLibro    string          `protobuf:"bytes,6,opt,name=nombreLibro,proto3" json:"nombreLibro,omitempty"`
}

func (x *Propuesta) Reset() {
	*x = Propuesta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_namenode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Propuesta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Propuesta) ProtoMessage() {}

func (x *Propuesta) ProtoReflect() protoreflect.Message {
	mi := &file_namenode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Propuesta.ProtoReflect.Descriptor instead.
func (*Propuesta) Descriptor() ([]byte, []int) {
	return file_namenode_proto_rawDescGZIP(), []int{0}
}

func (x *Propuesta) GetDatanode1() []int32 {
	if x != nil {
		return x.Datanode1
	}
	return nil
}

func (x *Propuesta) GetDatanode2() []int32 {
	if x != nil {
		return x.Datanode2
	}
	return nil
}

func (x *Propuesta) GetDatanode3() []int32 {
	if x != nil {
		return x.Datanode3
	}
	return nil
}

func (x *Propuesta) GetCantidadPartes() int32 {
	if x != nil {
		return x.CantidadPartes
	}
	return 0
}

func (x *Propuesta) GetStatus() PropuestaStatus {
	if x != nil {
		return x.Status
	}
	return PropuestaStatus_Rechazado
}

func (x *Propuesta) GetNombreLibro() string {
	if x != nil {
		return x.NombreLibro
	}
	return ""
}

var File_namenode_proto protoreflect.FileDescriptor

var file_namenode_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0xe2, 0x01, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x6e, 0x6f, 0x64, 0x65, 0x31, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x74,
	0x61, 0x6e, 0x6f, 0x64, 0x65, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f,
	0x64, 0x65, 0x32, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x6e,
	0x6f, 0x64, 0x65, 0x32, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64, 0x65,
	0x33, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x64,
	0x65, 0x33, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x74, 0x69, 0x64, 0x61, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x74,
	0x69, 0x64, 0x61, 0x64, 0x50, 0x61, 0x72, 0x74, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6e, 0x61, 0x6d,
	0x65, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x6d, 0x62, 0x72, 0x65, 0x4c, 0x69, 0x62, 0x72, 0x6f, 0x2a,
	0x2e, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x68, 0x61, 0x7a, 0x61, 0x64, 0x6f, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x64, 0x6f, 0x10, 0x01, 0x32,
	0x55, 0x0a, 0x0f, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x42, 0x0a, 0x10, 0x4d, 0x61, 0x6e, 0x65, 0x6a, 0x61, 0x72, 0x50, 0x72, 0x6f,
	0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x12, 0x13, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61, 0x1a, 0x13, 0x2e, 0x6e, 0x61,
	0x6d, 0x65, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x75, 0x65, 0x73, 0x74, 0x61,
	0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x42, 0x13, 0x5a, 0x11, 0x4e, 0x61, 0x6d, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x6e, 0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_namenode_proto_rawDescOnce sync.Once
	file_namenode_proto_rawDescData = file_namenode_proto_rawDesc
)

func file_namenode_proto_rawDescGZIP() []byte {
	file_namenode_proto_rawDescOnce.Do(func() {
		file_namenode_proto_rawDescData = protoimpl.X.CompressGZIP(file_namenode_proto_rawDescData)
	})
	return file_namenode_proto_rawDescData
}

var file_namenode_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_namenode_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_namenode_proto_goTypes = []interface{}{
	(PropuestaStatus)(0), // 0: namenode.PropuestaStatus
	(*Propuesta)(nil),    // 1: namenode.Propuesta
}
var file_namenode_proto_depIdxs = []int32{
	0, // 0: namenode.Propuesta.status:type_name -> namenode.PropuestaStatus
	1, // 1: namenode.NameNodeHandler.ManejarPropuesta:input_type -> namenode.Propuesta
	1, // 2: namenode.NameNodeHandler.ManejarPropuesta:output_type -> namenode.Propuesta
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_namenode_proto_init() }
func file_namenode_proto_init() {
	if File_namenode_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_namenode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Propuesta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_namenode_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_namenode_proto_goTypes,
		DependencyIndexes: file_namenode_proto_depIdxs,
		EnumInfos:         file_namenode_proto_enumTypes,
		MessageInfos:      file_namenode_proto_msgTypes,
	}.Build()
	File_namenode_proto = out.File
	file_namenode_proto_rawDesc = nil
	file_namenode_proto_goTypes = nil
	file_namenode_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NameNodeHandlerClient is the client API for NameNodeHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NameNodeHandlerClient interface {
	ManejarPropuesta(ctx context.Context, opts ...grpc.CallOption) (NameNodeHandler_ManejarPropuestaClient, error)
}

type nameNodeHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewNameNodeHandlerClient(cc grpc.ClientConnInterface) NameNodeHandlerClient {
	return &nameNodeHandlerClient{cc}
}

func (c *nameNodeHandlerClient) ManejarPropuesta(ctx context.Context, opts ...grpc.CallOption) (NameNodeHandler_ManejarPropuestaClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NameNodeHandler_serviceDesc.Streams[0], "/namenode.NameNodeHandler/ManejarPropuesta", opts...)
	if err != nil {
		return nil, err
	}
	x := &nameNodeHandlerManejarPropuestaClient{stream}
	return x, nil
}

type NameNodeHandler_ManejarPropuestaClient interface {
	Send(*Propuesta) error
	Recv() (*Propuesta, error)
	grpc.ClientStream
}

type nameNodeHandlerManejarPropuestaClient struct {
	grpc.ClientStream
}

func (x *nameNodeHandlerManejarPropuestaClient) Send(m *Propuesta) error {
	return x.ClientStream.SendMsg(m)
}

func (x *nameNodeHandlerManejarPropuestaClient) Recv() (*Propuesta, error) {
	m := new(Propuesta)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NameNodeHandlerServer is the server API for NameNodeHandler service.
type NameNodeHandlerServer interface {
	ManejarPropuesta(NameNodeHandler_ManejarPropuestaServer) error
}

// UnimplementedNameNodeHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedNameNodeHandlerServer struct {
}

func (*UnimplementedNameNodeHandlerServer) ManejarPropuesta(NameNodeHandler_ManejarPropuestaServer) error {
	return status.Errorf(codes.Unimplemented, "method ManejarPropuesta not implemented")
}

func RegisterNameNodeHandlerServer(s *grpc.Server, srv NameNodeHandlerServer) {
	s.RegisterService(&_NameNodeHandler_serviceDesc, srv)
}

func _NameNodeHandler_ManejarPropuesta_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NameNodeHandlerServer).ManejarPropuesta(&nameNodeHandlerManejarPropuestaServer{stream})
}

type NameNodeHandler_ManejarPropuestaServer interface {
	Send(*Propuesta) error
	Recv() (*Propuesta, error)
	grpc.ServerStream
}

type nameNodeHandlerManejarPropuestaServer struct {
	grpc.ServerStream
}

func (x *nameNodeHandlerManejarPropuestaServer) Send(m *Propuesta) error {
	return x.ServerStream.SendMsg(m)
}

func (x *nameNodeHandlerManejarPropuestaServer) Recv() (*Propuesta, error) {
	m := new(Propuesta)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _NameNodeHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "namenode.NameNodeHandler",
	HandlerType: (*NameNodeHandlerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ManejarPropuesta",
			Handler:       _NameNodeHandler_ManejarPropuesta_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "namenode.proto",
}
