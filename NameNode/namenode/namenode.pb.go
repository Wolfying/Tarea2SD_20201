// Code generated by protoc-gen-go. DO NOT EDIT.
// source: namenode.proto

package namenode

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PropuestaStatus int32

const (
	PropuestaStatus_Rechazado PropuestaStatus = 0
	PropuestaStatus_Aprobado  PropuestaStatus = 1
)

var PropuestaStatus_name = map[int32]string{
	0: "Rechazado",
	1: "Aprobado",
}

var PropuestaStatus_value = map[string]int32{
	"Rechazado": 0,
	"Aprobado":  1,
}

func (x PropuestaStatus) String() string {
	return proto.EnumName(PropuestaStatus_name, int32(x))
}

func (PropuestaStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_af856e7bff106bce, []int{0}
}

type Propuesta struct {
	Datanode1            []int32         `protobuf:"varint,1,rep,packed,name=datanode1,proto3" json:"datanode1,omitempty"`
	Datanode2            []int32         `protobuf:"varint,2,rep,packed,name=datanode2,proto3" json:"datanode2,omitempty"`
	Datanode3            []int32         `protobuf:"varint,3,rep,packed,name=datanode3,proto3" json:"datanode3,omitempty"`
	CantidadPartes       int32           `protobuf:"varint,4,opt,name=cantidadPartes,proto3" json:"cantidadPartes,omitempty"`
	Status               PropuestaStatus `protobuf:"varint,5,opt,name=status,proto3,enum=namenode.PropuestaStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Propuesta) Reset()         { *m = Propuesta{} }
func (m *Propuesta) String() string { return proto.CompactTextString(m) }
func (*Propuesta) ProtoMessage()    {}
func (*Propuesta) Descriptor() ([]byte, []int) {
	return fileDescriptor_af856e7bff106bce, []int{0}
}

func (m *Propuesta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Propuesta.Unmarshal(m, b)
}
func (m *Propuesta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Propuesta.Marshal(b, m, deterministic)
}
func (m *Propuesta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Propuesta.Merge(m, src)
}
func (m *Propuesta) XXX_Size() int {
	return xxx_messageInfo_Propuesta.Size(m)
}
func (m *Propuesta) XXX_DiscardUnknown() {
	xxx_messageInfo_Propuesta.DiscardUnknown(m)
}

var xxx_messageInfo_Propuesta proto.InternalMessageInfo

func (m *Propuesta) GetDatanode1() []int32 {
	if m != nil {
		return m.Datanode1
	}
	return nil
}

func (m *Propuesta) GetDatanode2() []int32 {
	if m != nil {
		return m.Datanode2
	}
	return nil
}

func (m *Propuesta) GetDatanode3() []int32 {
	if m != nil {
		return m.Datanode3
	}
	return nil
}

func (m *Propuesta) GetCantidadPartes() int32 {
	if m != nil {
		return m.CantidadPartes
	}
	return 0
}

func (m *Propuesta) GetStatus() PropuestaStatus {
	if m != nil {
		return m.Status
	}
	return PropuestaStatus_Rechazado
}

func init() {
	proto.RegisterEnum("namenode.PropuestaStatus", PropuestaStatus_name, PropuestaStatus_value)
	proto.RegisterType((*Propuesta)(nil), "namenode.Propuesta")
}

func init() {
	proto.RegisterFile("namenode.proto", fileDescriptor_af856e7bff106bce)
}

var fileDescriptor_af856e7bff106bce = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0x4b, 0xcc, 0x4d,
	0xcd, 0xcb, 0x4f, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x0e,
	0x30, 0x72, 0x71, 0x06, 0x14, 0xe5, 0x17, 0x94, 0xa6, 0x16, 0x97, 0x24, 0x0a, 0xc9, 0x70, 0x71,
	0xa6, 0x24, 0x96, 0x24, 0x82, 0x64, 0x0c, 0x25, 0x18, 0x15, 0x98, 0x35, 0x58, 0x83, 0x10, 0x02,
	0xc8, 0xb2, 0x46, 0x12, 0x4c, 0xa8, 0xb2, 0x46, 0xc8, 0xb2, 0xc6, 0x12, 0xcc, 0xa8, 0xb2, 0xc6,
	0x42, 0x6a, 0x5c, 0x7c, 0xc9, 0x89, 0x79, 0x25, 0x99, 0x29, 0x89, 0x29, 0x01, 0x89, 0x45, 0x25,
	0xa9, 0xc5, 0x12, 0x2c, 0x0a, 0x8c, 0x40, 0x25, 0x68, 0xa2, 0x42, 0x86, 0x5c, 0x6c, 0x40, 0x87,
	0x94, 0x94, 0x16, 0x4b, 0xb0, 0x02, 0xe5, 0xf9, 0x8c, 0x24, 0xf5, 0xe0, 0x4e, 0x87, 0x3b, 0x33,
	0x18, 0xac, 0x20, 0x08, 0xaa, 0x50, 0x4b, 0x8f, 0x8b, 0x1f, 0x4d, 0x4a, 0x88, 0x97, 0x8b, 0x33,
	0x28, 0x35, 0x39, 0x23, 0xb1, 0x2a, 0x31, 0x25, 0x5f, 0x80, 0x41, 0x88, 0x87, 0x8b, 0xc3, 0x11,
	0xe8, 0xf1, 0x24, 0x10, 0x8f, 0xd1, 0x28, 0x94, 0x8b, 0xdf, 0x0f, 0x68, 0xa6, 0x1f, 0xd0, 0x4c,
	0x8f, 0xc4, 0xbc, 0x94, 0x9c, 0xd4, 0x22, 0x21, 0x27, 0x2e, 0x01, 0xdf, 0xc4, 0xbc, 0xd4, 0xac,
	0xc4, 0x22, 0x44, 0x58, 0x08, 0x63, 0xb1, 0x59, 0x0a, 0x9b, 0xa0, 0x12, 0x83, 0x06, 0xa3, 0x01,
	0x63, 0x12, 0x1b, 0x38, 0x68, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x74, 0x6a, 0xe1, 0x01,
	0x6c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NameNodeHandlerClient is the client API for NameNodeHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NameNodeHandlerClient interface {
	ManejarPropuesta(ctx context.Context, opts ...grpc.CallOption) (NameNodeHandler_ManejarPropuestaClient, error)
}

type nameNodeHandlerClient struct {
	cc grpc.ClientConnInterface
}

func NewNameNodeHandlerClient(cc grpc.ClientConnInterface) NameNodeHandlerClient {
	return &nameNodeHandlerClient{cc}
}

func (c *nameNodeHandlerClient) ManejarPropuesta(ctx context.Context, opts ...grpc.CallOption) (NameNodeHandler_ManejarPropuestaClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NameNodeHandler_serviceDesc.Streams[0], "/namenode.NameNodeHandler/ManejarPropuesta", opts...)
	if err != nil {
		return nil, err
	}
	x := &nameNodeHandlerManejarPropuestaClient{stream}
	return x, nil
}

type NameNodeHandler_ManejarPropuestaClient interface {
	Send(*Propuesta) error
	Recv() (*Propuesta, error)
	grpc.ClientStream
}

type nameNodeHandlerManejarPropuestaClient struct {
	grpc.ClientStream
}

func (x *nameNodeHandlerManejarPropuestaClient) Send(m *Propuesta) error {
	return x.ClientStream.SendMsg(m)
}

func (x *nameNodeHandlerManejarPropuestaClient) Recv() (*Propuesta, error) {
	m := new(Propuesta)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NameNodeHandlerServer is the server API for NameNodeHandler service.
type NameNodeHandlerServer interface {
	ManejarPropuesta(NameNodeHandler_ManejarPropuestaServer) error
}

// UnimplementedNameNodeHandlerServer can be embedded to have forward compatible implementations.
type UnimplementedNameNodeHandlerServer struct {
}

func (*UnimplementedNameNodeHandlerServer) ManejarPropuesta(srv NameNodeHandler_ManejarPropuestaServer) error {
	return status.Errorf(codes.Unimplemented, "method ManejarPropuesta not implemented")
}

func RegisterNameNodeHandlerServer(s *grpc.Server, srv NameNodeHandlerServer) {
	s.RegisterService(&_NameNodeHandler_serviceDesc, srv)
}

func _NameNodeHandler_ManejarPropuesta_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NameNodeHandlerServer).ManejarPropuesta(&nameNodeHandlerManejarPropuestaServer{stream})
}

type NameNodeHandler_ManejarPropuestaServer interface {
	Send(*Propuesta) error
	Recv() (*Propuesta, error)
	grpc.ServerStream
}

type nameNodeHandlerManejarPropuestaServer struct {
	grpc.ServerStream
}

func (x *nameNodeHandlerManejarPropuestaServer) Send(m *Propuesta) error {
	return x.ServerStream.SendMsg(m)
}

func (x *nameNodeHandlerManejarPropuestaServer) Recv() (*Propuesta, error) {
	m := new(Propuesta)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _NameNodeHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "namenode.NameNodeHandler",
	HandlerType: (*NameNodeHandlerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ManejarPropuesta",
			Handler:       _NameNodeHandler_ManejarPropuesta_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "namenode.proto",
}
